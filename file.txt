connection.php: Questo file gestisce la connessione al database. Viene utilizzato da altri file nel progetto per stabilire una connessione al database e interagire con esso

index.php: Questo è il file principale del progetto. Viene utilizzato come entry point per l'applicazione web. Contiene il layout generale dell'applicazione.

createUsersDatabase.sql: Questo file è uno script SQL utilizzato per creare il database con tutte le relazioni e informazioni pertinenti necessarie ai fini dell'applicazione.

curious.php: In tale file mostriamo all'interno di un iframe un video scelto randomicamente dalla relazione Videos del database. Quest'ultima è stata popolata con video appartenenti ad una playlist pubblica di YouTube creata per l'occasione.

homepage.php: Rappresenta la prima pagina dell'applicazione ad essere visualizzata dall'ipotetico user. Da qui è possibile accedere tramite Login o registrarsi con Signup.



css  (directory)

login.css: Questo file contiene le regole di stile (CSS) per la pagina di login e di signup. Definisce l'aspetto visivo degli elementi HTML sulla pagina di accesso, come campi di input, pulsanti e layout generale. Il file viene incluso nella pagina di accesso (login.php) per fornire un design appetibile.
index.css: Questo file contiene le regole di stile (CSS) specifiche per la pagina di indice (index.php) del progetto.

js  (directory)

registration.js: Questo file contiene il codice JavaScript per la registrazione degli utenti. Può gestire la validazione dei campi di input, l'invio dei dati al server (in modalità asincrona mediante l'utilizzo della tecnologia AJAX) per la registrazione e altre funzioni correlate alla registrazione degli utenti. Viene incluso nella pagina di registrazione (registration.php) per fornire funzionalità interattive e di controllo dei dati inseriti dagli utenti.
index.js: Contiene il codice JavaScript specifico per "index.php". Include funzioni e logica per manipolare gli elementi HTML, gestire gli eventi dell'utente, effettuare richieste AJAX o altre operazioni dinamiche sulla pagina.
login.js: Contiene il codice JavaScript specifico per "login.php". Include funzioni per la validazione dei campi di accesso, il controllo dell'input dell'utente, la gestione degli eventi di login e altre operazioni correlate all'autenticazione degli utenti.
requestHandler.js: Contiene il codice JavaScript relativo alla dinamicità lato frontend della gestione delle richieste d'amicizia implementate nel Social.

pages  (directory)

printRequest.php: Questo file è responsabile per la visualizzazione delle richieste di amicizia. Contiene il codice per recuperare le richieste di amicizia dal database e mostrare i dati corrispondenti nella pagina. È incluso in una parte del sito web in cui gli utenti possono accedere alle richieste di amicizia che hanno ricevuto e decidere se accettarle o rifiutarle.
addFriendPopup.php: Gestisce la visualizzazione di una finestra popup per aggiungere un amico. All'apertura di questa è possibile inviare la richiesta a persone registrate nel Social con cui non si ha ancora un rapporto di amicizia e nemmeno una richiesta pendente (caso gestito con la sostituzione del bottone di aggiunta con quello raffigurante una clessidra)
login.php: Rappresenta la pagina di accesso dell'applicazione. Include un modulo di accesso per l'utente, campi per l'inserimento delle credenziali, pulsanti per il login e funzionalità di registrazione.
friendRequests.php: Gestisce lato server le informazioni relative alle richieste di amicizia pendenti.
main.php: Rappresenta l'elemento HTML cuore dell'applicazione.
leftContainer.php: Rappresenta la sezione sinistra della pagina principale.
addMessage.php: Gestisce l'invio di un nuovo messaggio. Include il codice per ricevere i dati del messaggio inviato tramite un modulo HTML, effettua la validazione dei dati in modalità asincrona e delega il salvataggio del messaggio nel DB al file backAddMessage.php.
printPost.php: Gestisce la visualizzazione di un singolo post. Include il codice per recuperare le informazioni del post dal database, come il testo del post, l'autore, il timestamp e altri dettagli. Il file può formatta tali informazioni all'interno di un layout specifico e mostra il post nella pagina desiderata.
notificationPopup.php: Gestisce la visualizzazione di una finestra popup per le notifiche non lette. Una volta visualizzate verranno eliminate dal DB e dunque anche dal relativo popup lato client.
printMessage.php: Contiene la funzione per la visualizzazione di un messaggio specifico.
printNotification.php: Gestisce la visualizzazione di una notifica.
messagePopup.php: Gestisce la visualizzazione di una finestra popup per l'invio di messaggi.
preparePrintPost.php: Prepara i dati necessari per la visualizzazione di un post. Opera sul database per il recupero di informazioni inerenti al post, in un secondo momento mostrate a schermo con la chiamata di printPost. 
rightContainer.php: Rappresenta la sezione destra di "index.php". 
middleContainer.php: Rappresenta la sezione centrale di "index.php".
printChat.php: Gestisce la visualizzazione di tutti i messaggi relativi al singolo user loggato che funge da destinatario. Include codice per recuperare i messaggi di chat dal database, organizzarli in ordine cronologico e formattarli per la visualizzazione all'interno di una chat.
buttonPrintPostAndPopup.php:  Gestisce la visualizzazione di un bootstrap popup. Quest'ultimo permette l'inserimento di dati da parte dell'utente relativi al post che si intende pubblicare (pic, contenuto, tag).
quoteOfTheMoment.php: Gestisce la visualizzazione di una citazione del momento (con relativa figura di autore) scelta randomicamente al momento del caricamento della pagina, da un'insieme di frasi storate del DB nella tabella "quotes".
setGlobalVariables.php: Contiene il codice per impostare variabili globali nell'applicazione ai fini della gestione di informazioni di login.
registration.php: Gestisce la registrazione di un nuovo utente nel sistema. E' pertanto costituito da un form per l'immissione di dati, sui quali vengono effettuati controlli lato client e lato server (AJAX) e mostrati a video eventuali errori occorsi. In caso di esito positivo l'utente verrà reindirizzato alla pagina principale del sito.
feeds.php: Gestisce la visualizzazione dei feed di contenuti nell'applicazione.
navigationBar.php: Contiene il codice della bootstrap navbar presente nelle pagine del progetto. Il file viene incluso nelle pagine per fornire una navigazione coerente e facilitare l'accesso alle diverse sezioni dell'applicazione per mezzo dei vari link.
messages.php:  Sezione relativa alla generale visualizzazione dei messaggi.
sidebar.php: Rappresenta la barra laterale di navigazione presente in "index.php". Consente di visualizzare le notifiche relative all'utente e di far comparire il popup correlato alla creazione/invio di un messaggio. Grazie al suo comportamento responsive su dispositivi di piccola taglia (smartphone) si posiziona sulla destra, in corrisponenza del pollice dell'utente, il tutto per migliorare la fruibilità del social da parte di quest'ultimo.

script  (directory)
acceptRequest.php: Questo file gestisce l'accettazione di una richiesta di amicizia da parte di un utente. In particolare rimuove dal DB la relativa richiesta pendente, inserisce la notifica in quelle dell'utente destinatario e registra nella tabella "friends" la relazione di amicizia (simmetrica, dunque registrata per ambo i versi)
backQuote.php: Gestisce l'aggiunta di una citazione alla piattaforma. 
printPhoto.php: Gestisce la visualizzazione di una foto specifica.
backAddMessage.php: Gestisce l'aggiunta nel DB del messaggio inviato da un utente. Controlla inoltre che non si verifichino errori di alcun tipo come ad esempio il tentativo di invio di un messaggio verso un utente non amico.
getUserLike.php: Gestisce l'ottenimento delle informazioni sui "Mi piace" di un post. Restituisce un username randomico tra le persone che hanno gradito il post in esame (instagram-like).
logout.php: Consente la disconnessione di un utente dalla piattaforma. Include codice per terminare la sessione dell'utente, rimuovendo le informazioni di accesso salvate e reindirizzando l'utente stesso alla homepage.
convertTimeFromTimestampToTime.php: Contiene una specifica funzione per la conversione di un timestamp in un formato leggibile e user-friendly, relativo rispetto al momento di visualizzazione dello specifico evento.
addComment.php: Permette l'aggiunta di un commento a un post. Include il codice per ricevere i dati del commento, come il testo del commento, l'ID del post o della foto e l'utente che ha inserito il commento, e salvare il commento nel database per la visualizzazione successiva.
getArrayPhotoLike.php: Contiene codice php necessario all'ottenimento di un array contenente le informazioni sui "Mi piace" ricevuti da una foto. Nello specifico, estrae casualmente le propic di al più 3 users che hanno lasciato like, mostrandole al livello di reazioni del post.
backRegistration.php: Gestisce lato server il processo di registrazione di un nuovo utente. 
backAddFriend.php: Permette l'aggiunta della richiesta di amicizia nel sistema con gestione di eventuali errori. 
leaveLike.php: Contiene codice lato server utile alla registrazione dell'evento "like" scatenato dal click della corrispondente icona da parte dell'utente.
backLogin.php: Gestisce il processo di accesso degli utenti al sistema.
discardRequest.php: Gestisce il rifiuto di una richiesta di amicizia da parte di un utente e ha un comportamento analogo seppur opposto a "acceptRequest.php."
removeLike.php: Consente la rimozione di un "Mi piace" da un post, aggiornando il conteggio di likes rimanenti.
showComments.php: Gestisce la visualizzazione dei commenti associati a un post. Include codice per recuperare i commenti dal database, organizzarli in ordine cronologico e formattarli per la visualizzazione nella pagina corrispondente.
clearNotifications.php: Gestisce la rimozione (livello back-end) delle notifiche relative allo specifico utente.
setGlobalVariables.php: Contiene il codice per impostare variabili globali nell'applicazione. E' incluso all'inizio di altre pagine per rendere disponibili determinate variabili in tutto il progetto. 
backPost.php: Gestisce l'elaborazione delle informazioni inviate tramite un modulo per creare un nuovo post.
printLikePhotos.php: Permette la visualizzazione delle propic relative agli utenti che hanno inserito "Mi piace" ad un post.
